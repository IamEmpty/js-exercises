const questions =
[ { name: 'questions/10',
    category: 'unclassified',
    value: 'console.log(4 - "5" + 0xf - "1e1");\n' },
  { name: 'questions/11',
    category: 'unclassified',
    value: 'function F() {}\n\nconsole.log(F.prototyope);\n' },
  { name: 'questions/12',
    category: 'unclassified',
    value: 'function F() {}\n\nconsole.log(F instanceof Function);\n' },
  { name: 'questions/13',
    category: 'unclassified',
    value: 'var a = [1, 2, 3];\nvar b = [1, 2, 3];\n\nconsole.log(a == b);\n' },
  { name: 'questions/6',
    category: 'unclassified',
    value: 'console.log( +"something" );\n' },
  { name: 'questions/7',
    category: 'unclassified',
    value: 'var a = new Array(1,2),\n    b = new Array(3);\n\nconsole.log(a[0] + b[0]);\n' },
  { name: 'questions/8',
    category: 'unclassified',
    value: 'var a = (1,5 - 1) * 2;\n\nconsole.log(a);\n' },
  { name: 'questions/9',
    category: 'unclassified',
    value: 'for (var key in {1:1, 0:0}) {\n  console.log(key);\n}\n' },
  { name: 'questions/array/400',
    category: 'unclassified',
    value: 'var arr = [];\narr[0]  = \'a\';\narr[1]  = \'b\';\narr.foo = \'c\';\nalert(arr.length);\n' },
  { name: 'questions/boolean/500',
    category: 'unclassified',
    value: '10 > 9 > 8 === true;\n' },
  { name: 'questions/boolean/501',
    category: 'unclassified',
    value: 'NaN === NaN;\n' },
  { name: 'questions/davidshariff/200',
    category: 'unclassified',
    value: 'var foo = function foo() {\n  console.log(foo === foo);\n};\nfoo();\n' },
  { name: 'questions/davidshariff/202',
    category: 'unclassified',
    value: 'Number("1") - 1 == 0;\n' },
  { name: 'questions/davidshariff/203',
    category: 'unclassified',
    value: '(true + false) > 2 + true;\n' },
  { name: 'questions/davidshariff/205',
    category: 'unclassified',
    value: '"1" - - "1";\n' },
  { name: 'questions/davidshariff/206',
    category: 'unclassified',
    value: 'var x = 3;\n\nvar foo = {\n  x: 2,\n  baz: {\n    x: 1,\n    bar: function() {\n      return this.x;\n    }\n  }\n}\n\nvar go = foo.baz.bar;\n\nalert(go());\nalert(foo.baz.bar());\n' },
  { name: 'questions/davidshariff/207',
    category: 'unclassified',
    value: 'new String("This is a string") instanceof String;\n' },
  { name: 'questions/davidshariff/208',
    category: 'unclassified',
    value: '[] + [] + \'foo\'.split(\'\');\n' },
  { name: 'questions/davidshariff/209',
    category: 'unclassified',
    value: 'new Array(5).toString();\n' },
  { name: 'questions/davidshariff/210',
    category: 'unclassified',
    value: 'var myArr = [\'foo\', \'bar\', \'baz\'];\nmyArr.length = 0;\nmyArr.push(\'bin\');\nconsole.log(myArr);\n' },
  { name: 'questions/davidshariff/211',
    category: 'unclassified',
    value: 'String(\'Hello\') === \'Hello\';\n' },
  { name: 'questions/davidshariff/212',
    category: 'unclassified',
    value: 'var x = 0;\nfunction foo() {\n  x++;\n  this.x = x;\n  return foo;\n}\nvar bar = new new foo;\nconsole.log(bar.x);\n' },
  { name: 'questions/davidshariff/213',
    category: 'unclassified',
    value: 'var bar = 1,\n  foo = {};\n\nfoo: {\n  bar: 2;\n  baz: ++bar;\n};\nfoo.baz + foo.bar + bar;\n' },
  { name: 'questions/davidshariff/214',
    category: 'unclassified',
    value: 'var myArr = [\'foo\', \'bar\', \'baz\'];\nmyArr[2];\nconsole.log(\'2\' in myArr);\n' },
  { name: 'questions/davidshariff/215',
    category: 'unclassified',
    value: 'function foo(a, b) {\n  arguments[1] = 2;\n  alert(b);\n}\nfoo(1);\n' },
  { name: 'questions/hoisting/1',
    category: 'unclassified',
    value: 'var foo = 1;\n\nfunction bar() {\n  if ( !foo ) {\n    var foo = 10;\n  }\n\n  console.log(foo);\n}\n\nbar();\n' },
  { name: 'questions/hoisting/2',
    category: 'unclassified',
    value: 'function test() {\n  a = 1;\n\n  console.log(a);\n\n  console.log(b);\n\n  console.log(c());\n\n  var a;\n\n  var b = 2;\n\n  function c() {\n    return 3;\n  }\n}\n\ntest();\n' },
  { name: 'questions/hoisting/3',
    category: 'unclassified',
    value: 'var a = 1;\n\nfunction test() {\n  a = 10;\n\n  return;\n\n  function a() {}\n}\n\ntest();\n\nconsole.log(a);\n' },
  { name: 'questions/hoisting/5',
    category: 'unclassified',
    value: 'console.log(str);\nvar str = "Hello";\n' },
  { name: 'questions/hoisting/two-for-loops',
    category: 'unclassified',
    value: 'var a = [];\n\nfor (var i = 0; i < 10; i++)\n  a.push(function () {\n    console.log(i);\n  })\n\nfor (var j = 0; j < 10; ++j)\n  a[j]()\n' },
  { name: 'questions/instanceof/300',
    category: 'unclassified',
    value: '"This is a string" instanceof String;\n' },
  { name: 'questions/perfectionkills/102',
    category: 'unclassified',
    value: '(function(x){\n  delete x;\n  return x;\n})(1);\n' },
  { name: 'questions/perfectionkills/111',
    category: 'unclassified',
    value: '(function f(){\n  function f(){ return 1; }\n  return f();\n  function f(){ return 2; }\n})();\n' },
  { name: 'questions/perfectionkills/112',
    category: 'unclassified',
    value: 'function f(){ return f; }\nnew f() instanceof f;\n' },
  { name: 'questions/perfectionkills/113',
    category: 'unclassified',
    value: 'with (function(x, undefined){}) length;\n' },
  { name: 'questions/this/600',
    category: 'unclassified',
    value: 'var a = function Car() {\n  this.a = 0\n}\n\nvar b = a();\nconsole.log(b);\n\nvar c = new a();\nconsole.log(c);\n' },
  { name: 'questions/this/601',
    category: 'unclassified',
    value: 'function Person() {\n  this.canSleep = true;\n  this.canHide = false;\n}\n\nPerson.prototype.canSleepF = function () {\n  return this.canSleep;\n};\n\nfunction Ninja() {\n  this.canHide = true;\n}\nNinja.prototype = Person.prototype;\n\nNinja.prototype.canHideF = function () {\n  return this.canHide;\n}\n\nvar person = new Person();\nvar ninja = new Ninja();\nconsole.log(ninja.canSleepF());\nconsole.log(person.canHideF());\n' },
  { name: 'questions/this/602',
    category: 'unclassified',
    value: 'function Person() {\n  this.canSleep = true;\n  this.canHide = false;\n}\n\nPerson.prototype.canSleepF = function () {\n  return this.canSleep;\n};\n\nfunction Ninja() {\n  this.canHide = true;\n}\nNinja.prototype = new Person();\n\nNinja.prototype.canHideF = function () {\n  return this.canHide;\n}\n\nvar person = new Person();\nvar ninja = new Ninja();\nconsole.log(ninja.canSleepF());\nconsole.log(person.canHideF());\n' },
  { name: 'questions/typeof/100',
    category: 'unclassified',
    value: '(function(){\n  return typeof arguments;\n})();\n' },
  { name: 'questions/typeof/101',
    category: 'unclassified',
    value: 'var f = function g(){ return 23; };\ntypeof g();\n' },
  { name: 'questions/typeof/103',
    category: 'unclassified',
    value: 'var y = 1, x = y = typeof x;\nx;\n' },
  { name: 'questions/typeof/104',
    category: 'unclassified',
    value: '(function f(f){\n  return typeof f();\n})(function(){ return 1; });\n' },
  { name: 'questions/typeof/105',
    category: 'unclassified',
    value: 'var foo = {\n  bar: function() { return this.baz; },\n  baz: 1\n};\n(function(){\n  return typeof arguments[0]();\n})(foo.bar);\n' },
  { name: 'questions/typeof/106',
    category: 'unclassified',
    value: 'var foo = {\n  bar: function(){ return this.baz; },\n  baz: 1\n}\ntypeof (f = foo.bar)();\n' },
  { name: 'questions/typeof/107',
    category: 'unclassified',
    value: 'var f = (function f(){ return "1"; }, function g(){ return 2; })();\ntypeof f;\n' },
  { name: 'questions/typeof/108',
    category: 'unclassified',
    value: 'var x = 1;\nif (function f(){}) {\n  x += typeof f;\n}\nx;\n' },
  { name: 'questions/typeof/109',
    category: 'unclassified',
    value: 'var x = [typeof x, typeof y][1];\ntypeof typeof x;\n' },
  { name: 'questions/typeof/110',
    category: 'unclassified',
    value: '(function(foo){\n  return typeof foo.bar;\n})({ foo: { bar: 1 } });\n' },
  { name: 'questions/typeof/201',
    category: 'unclassified',
    value: 'function aaa() {\n  return\n  {\n    test: 1\n  };\n}\nalert(typeof aaa());\n' },
  { name: 'questions/typeof/204',
    category: 'unclassified',
    value: 'function bar() {\n  return foo;\n  foo = 10;\n  function foo() {}\n  var foo = \'11\';\n}\nalert(typeof bar());\n' },
  { name: 'questions/typeof/4',
    category: 'unclassified',
    value: 'var y = 1;\n\nif (function f(){}) {\n  y += typeof f;\n}\n\nconsole.log(y);\n' } ];

export default questions;
